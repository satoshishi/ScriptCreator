using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using StateMachine.Node;
using ZaCo.Core;
using Binder;
using System;

namespace #NAMESPACE#
{
    public abstract class #NAME# : IStateNode
    {
        protected ReadonlyZaContainer Container{get;private set;}

        private DataBinder<Type> OnRequestAnyState = new DataBinder<Type>();
        public void AddOnRequestAnyStateListener(IDataReceiver<Type> listener) => OnRequestAnyState.Subscribe(listener);
        public void GoTo<T>() => OnRequestAnyState.Value = typeof(T);        

        public virtual void Initialize(ReadonlyZaContainer container)
        {
            Container = container;
        }        

        public abstract void OnEnter(#NAME# from);

        public virtual void OnUpdate()
        {

        }

        public abstract void OnExit(#NAME# to);

        public virtual void Dispose()
        {         
            Container.Dispose();
            OnRequestAnyState.Dispose();    
        }
    }
}
